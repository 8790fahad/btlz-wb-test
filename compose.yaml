networks:
  postgres-net:
    driver: bridge

volumes:
  postgres-vol:
    driver: local

services:

  postgres:
    container_name: postgres
    image: postgres:16.1-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGPORT: ${POSTGRES_PORT:-5432}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-vol:/var/lib/postgresql/data
    networks:
      - postgres-net
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  app:
    container_name: btlz-app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: ${APP_PORT:-5000}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${APP_PORT:-5000}:${APP_PORT:-5000}"
    networks:
      - postgres-net
    working_dir: /app
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 5
    command: ["npm", "run", "start"]
    restart: unless-stopped
